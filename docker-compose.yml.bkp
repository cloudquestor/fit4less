services:
  postgres:
    image: postgres:latest
    container_name: postgres_workout_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: Passw0rd
      POSTGRES_DB: workout_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d workout_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - workout_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4_workout
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: Passw0rd
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - workout_network

  api:
    build:
      context: ./workout-api
      dockerfile: Dockerfile.dev
    container_name: workout_api
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PASSWORD=Passw0rd
      - DB_NAME=workout_db
      - PORT=3000
    ports:
      - "3000:3000"
    volumes:
      - ./workout-api:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - workout_network

  ui:
    build:
      context: ./workout-ui
      dockerfile: Dockerfile.dev
    environment:
      - REACT_APP_API_URL=http://localhost:3000/api
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "80:3000"
    volumes:
      - ./workout-ui:/app
      - /app/node_modules
    stdin_open: true # for react-scripts
    tty: true       # for react-scripts
    depends_on:
      - api
    networks:
      - workout_network

      
volumes:
  postgres_data:
  pgadmin_data:

networks:
  workout_network:
    driver: bridge
